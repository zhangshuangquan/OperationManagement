<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.codyy.oc.admin.dao.ClsSchoolMapper">
 
  <resultMap id="BaseResultMap" type="com.codyy.oc.admin.entity.ClsSchool">
    <id column="CLS_SCHOOL_ID" jdbcType="VARCHAR" property="clsSchoolId" />
    <result column="BASE_AREA_ID" jdbcType="VARCHAR" property="baseAreaId" />
    <result column="PROJECT_ID" jdbcType="VARCHAR" property="projectId" />
    <result column="SCHOOL_NAME" jdbcType="VARCHAR" property="schoolName" />
    <result column="CONTACT" jdbcType="VARCHAR" property="contact" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="DELETE_FLAG" jdbcType="CHAR" property="deleteFlag" />
  </resultMap>
  
  
  <sql id="pageTop">
		select * from (select t.*,rownum as r from(
	</sql>
	
	<sql id="pageBottom">
	<![CDATA[
		) t) t1 where t1.r > #{start} and t1.r <= #{end}
		]]>
	</sql>
  
  
  <sql id="Base_Column_List">
    CLS_SCHOOL_ID, BASE_AREA_ID, PROJECT_ID, SCHOOL_NAME, CONTACT, PHONE, DELETE_FLAG
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from CLS_SCHOOL
    where CLS_SCHOOL_ID = #{clsSchoolId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from CLS_SCHOOL
    where CLS_SCHOOL_ID = #{clsSchoolId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.codyy.oc.admin.entity.ClsSchool">
    insert into CLS_SCHOOL (CLS_SCHOOL_ID, BASE_AREA_ID, PROJECT_ID, 
      SCHOOL_NAME, CONTACT, PHONE, 
      DELETE_FLAG)
    values (#{clsSchoolId,jdbcType=VARCHAR}, #{baseAreaId,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, 
      #{schoolName,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{deleteFlag,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.codyy.oc.admin.entity.ClsSchool">
    insert into CLS_SCHOOL
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="clsSchoolId != null">
        CLS_SCHOOL_ID,
      </if>
      <if test="baseAreaId != null">
        BASE_AREA_ID,
      </if>
      <if test="projectId != null">
        PROJECT_ID,
      </if>
      <if test="schoolName != null">
        SCHOOL_NAME,
      </if>
      <if test="contact != null">
        CONTACT,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="deleteFlag != null">
        DELETE_FLAG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="clsSchoolId != null">
        #{clsSchoolId,jdbcType=VARCHAR},
      </if>
      <if test="baseAreaId != null">
        #{baseAreaId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="schoolName != null">
        #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.codyy.oc.admin.entity.ClsSchool">
    update CLS_SCHOOL
    <set>
      <if test="baseAreaId != null">
        BASE_AREA_ID = #{baseAreaId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        PROJECT_ID = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="schoolName != null">
        SCHOOL_NAME = #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        CONTACT = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        DELETE_FLAG = #{deleteFlag,jdbcType=CHAR},
      </if>
    </set>
    where CLS_SCHOOL_ID = #{clsSchoolId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.codyy.oc.admin.entity.ClsSchool">
    update CLS_SCHOOL
    set BASE_AREA_ID = #{baseAreaId,jdbcType=VARCHAR},
      PROJECT_ID = #{projectId,jdbcType=VARCHAR},
      SCHOOL_NAME = #{schoolName,jdbcType=VARCHAR},
      CONTACT = #{contact,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      DELETE_FLAG = #{deleteFlag,jdbcType=CHAR}
    where CLS_SCHOOL_ID = #{clsSchoolId,jdbcType=VARCHAR}
  </update>
  
    <select id="getSchoolList" resultMap="BaseResultMap">
	  	select <include refid="Base_Column_List" /> from cls_school
	  	where delete_flag='N' and project_id = #{projectId,jdbcType=VARCHAR}  
	  	<if test="areaId != null and areaId !='' and areaId !='-1'">
	  	 and base_area_id in
	       (select b.base_area_id
	          from base_area b
	         start with b.base_area_id = #{areaId,jdbcType=VARCHAR}
	        connect by prior b.base_area_id = b.parent_id)
	     </if>
  	</select>
  	
  	<!--根据项目id获取学校数量-->
  	<select id="getSchoolCountByProjectId" parameterType="map" resultType="Integer">
  	     select count(1)
  	     from  cls_school cs
  	     where cs.project_id =#{projectId}  and  cs.delete_flag='N'
  	     
  	</select>
  	
  	<!-- 根据项目id获取学校并分页 -->
  	<select id="getSchoolByProjectIdPageList" parameterType="com.codyy.commons.page.Page" resultType="com.codyy.oc.admin.entity.ClsSchool">
  	  select 
  	     clsSchoolId,schoolName,areaPath,engineer,inspectProcess||'%' inspectProcess
  	   
  	  
  	  from(
  	  
  	     select

 			cls.cls_school_id as clsSchoolId,
 
 			cls.school_name as schoolName,
 
 			ba.area_path as areaPath,
 
 			wm_concat(NVL(au.realname, '-')) as engineer,
 
 			NVL(cls.inspect_process, 0)   as inspectProcess
 			
 			

  		from cls_school cls

  		left join cls_school_r_user clsr
    	   on clsr.cls_school_id = cls.cls_school_id

  	    left join base_area ba
           on ba.base_area_id = cls.base_area_id

        left join admin_user au
           on au.admin_user_id = clsr.admin_user_id
    
    
        <!-- left join (
  
           select distinct cs.cls_school_id,
                trunc(sum(nvl2(n.result, 1, 0))
                      over(partition by cs.cls_school_id) / count(1)
                      over(partition by cs.cls_school_id),
                      2) * 100 process
    
   		  from  cls_school cs
  
          left join cls_classroom clsc
           on clsc.cls_school_id = cs.cls_school_id
          left join classroom_inspect_detail n
           on clsc.cls_classroom_id = n.cls_classroom_id
          where cs.delete_flag = 'N'
          ) t
  
        on t.cls_school_id = cls.cls_school_id -->

      where cls.project_id = #{map.projectId}
      and cls.delete_flag = 'N'

      group by cls.cls_school_id, cls.school_name, ba.area_path, cls.create_time, cls.inspect_process,
               cls.update_time
         
         order by 
       
        <if test="map.sortDesc !=null and map.sortDesc!='' and map.sortDesc=='ASC' ">
   	      inspectProcess ASC ,
   	    </if>
   	    <if test="map.sortDesc !=null and map.sortDesc!='' and map.sortDesc=='DESC' ">
   	       inspectProcess DESC ,
   	    </if>
   	    
   	     cls.update_time DESC, cls.cls_school_id
   	    )
    
  	</select>
  	
  	<!-- 添加学校 -->
  <insert id="addSchool" parameterType="com.codyy.oc.admin.entity.ClsSchool">
    insert into CLS_SCHOOL (CLS_SCHOOL_ID, BASE_AREA_ID, PROJECT_ID, 
      SCHOOL_NAME, CONTACT, PHONE, 
      DELETE_FLAG,CREATE_TIME,UPDATE_TIME)
    values (#{clsSchoolId,jdbcType=VARCHAR}, #{baseAreaId,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, 
      #{schoolName,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{deleteFlag,jdbcType=CHAR},#{createTime}, #{updateTime})
  </insert>
  
  <!-- 添加学校-工程师表 -->
  <insert id="addSchoolRUser" parameterType="com.codyy.oc.admin.entity.ClsSchoolRUser">
    insert into cls_school_r_user(cls_school_r_user_id,cls_school_id,admin_user_id)
   
    <foreach collection="list" item="items" open="(" close=")" separator="union all">
			select 
				#{items.schoolRUserId} ,
				#{items.clsSchoolId},
				#{items.adminUserId} 
			from dual
	</foreach>
  </insert>
  
  <!-- 获取学校列表数量 -->
  <select id="getSchoolCount" parameterType="map" resultType="Integer">
       select count(1)
       from cls_school  cls
       where 1=1
       and delete_flag = 'N'  
       
       <if test="clsSchoolAreaId !=null and clsSchoolAreaId != '-1'">
	    and cls.base_area_id in
	       (select b.base_area_id
	          from base_area b
	          start with b.base_area_id = #{clsSchoolAreaId,jdbcType=VARCHAR}
	          connect by prior b.base_area_id = b.parent_id)
       </if>
       <if test="clsSchoolName !=null and clsSchoolName !=''">
   		 and cls.school_name like '%' || #{clsSchoolName} || '%' ESCAPE '/'
       </if>
       <if test="projectName!=null and projectName !=''">
         and  cls.project_id =(
              select p.project_id
                 from  project p
                 where p.project_id=cls.project_id
                 and   p.project_name  like '%' || #{projectName} || '%' ESCAPE '/'
         )
       </if>
  </select>
  
  <!-- 获取学校列表 -->
  <select id="getSchoolPageList" parameterType="com.codyy.commons.page.Page" resultType="com.codyy.oc.admin.entity.ClsSchool">
      select clsSchoolId,schoolName,areaPath,projectName,projectId,managerName,
       inspectProcess||'%' inspectProcess,classCount,engineerCount,
        explorationProcess||'%' explorationProcess, 
         installProcess ||'%' installProcess, 
         updateTime 
       from(
           select 
                       cls.cls_school_id as clsSchoolId,
                       cls.school_name as schoolName,
                       ba.area_path as areaPath,
                       p.project_name as projectName,
                       p.project_id as projectId,
                       au.realname as managerName,
                       nvl(t.classCount,0)  as classCount,
                       nvl(cls.inspect_process, 0)     as  inspectProcess,
                       nvl(t3.engineerCount,0) as engineerCount,
                       NVL(cls.EXPLORATION_PROCESS, 0)  as  explorationProcess,
                       NVL(cls.INSTALL_PROCESS, 0)     as   installProcess,
                       cls.update_time                 as  updateTime
                     
                  from cls_school cls
                  left join base_area ba
                    on ba.base_area_id = cls.base_area_id
                  left join project p
                    on p.project_id = cls.project_id
                  left join admin_user au
                    on au.admin_user_id = p.manager_id
               
                  left join (
                  
                     select   
                       clsc.cls_school_id,count(1) as classCount
                     from cls_classroom clsc
                     group by clsc.cls_school_id
                  
                  )t
                  on t.cls_school_id =cls.cls_school_id 
                  
                left join (
                
                   select  clssr.cls_school_id,
                           count(1) as engineerCount
                   
                   from  cls_school_r_user  clssr
                   group by clssr.cls_school_id
                    
                
                )t3 
               on t3.cls_school_id =cls.cls_school_id
                
                 
                 where 1 = 1
                and cls.delete_flag = 'N'
                 
       
         <if test="map.clsSchoolAreaId !=null and map.clsSchoolAreaId != '' and map.clsSchoolAreaId != '-1'">
	      and cls.base_area_id in
	         (select b.base_area_id
	            from base_area b
	            start with b.base_area_id = #{map.clsSchoolAreaId,jdbcType=VARCHAR}
	            connect by prior b.base_area_id = b.parent_id)
        </if>
        <if test="map.projectAreaId !=null and map.projectAreaId !='' and map.projectAreaId != '-1'">
	     and p.base_area_id in
	         (select b.base_area_id
	           from base_area b
	           start with b.base_area_id = #{map.projectAreaId,jdbcType=VARCHAR}
	           connect by prior b.base_area_id = b.parent_id)
        </if>
        <if test="map.clsSchoolName !=null and map.clsSchoolName !=''">
   		   and cls.school_name like '%' || #{map.clsSchoolName} || '%' ESCAPE '/'
        </if>
        <if test="map.projectName !=null and map.projectName !=''">
   		   and p.project_name like '%' || #{map.projectName} || '%' ESCAPE '/'
   	    </if>
   	    order by 
   	   
        <if test="map.sortDesc !=null and map.sortDesc!='' and map.sortDesc=='ASC' ">
           inspectProcess ASC,
        </if>
   	    <if test="map.sortDesc !=null and map.sortDesc!='' and map.sortDesc=='DESC' ">
   	       inspectProcess DESC,
   	    </if>
   	    <if test="map.explorationDesc !=null and map.explorationDesc!='' and map.explorationDesc== 'ASC'">
   	       explorationProcess ASC,
   	    </if>
   	    <if test="map.explorationDesc !=null and map.explorationDesc!='' and map.explorationDesc== 'DESC'">
   	       explorationProcess DESC,
   	    </if>
   	    <if test="map.installDesc !=null and map.installDesc!='' and map.installDesc== 'ASC'">
   	       installProcess ASC,
   	    </if>
   	      <if test="map.installDesc !=null and map.installDesc!='' and map.installDesc== 'DESC'">
   	       installProcess DESC,
   	    </if>
   	    <if test="map.updateDesc !=null and map.updateDesc!='' and map.updateDesc== 'ASC'">
   	       updateTime ASC,
   	    </if>
   	      <if test="map.updateDesc !=null and map.updateDesc!='' and map.updateDesc== 'DESC'">
   	       updateTime DESC,
   	    </if>
   	     <if test="map.updateDesc ==null or map.updateDesc ==''">
           updateTime DESC,
        </if>
   	     cls.cls_school_id)
   	    
   	   
  </select>
  
  
  <!-- 导出全部学校 -->
  <select id="exportSchoolList" parameterType="map" resultType="com.codyy.oc.admin.entity.ClsSchool">
        
     select clsSchoolId,schoolName,areaPath,projectName,projectId,managerName,
         inspectProcess||'%' inspectProcess,classCount,engineerCount,
         explorationProcess||'%' explorationProcess, 
         installProcess ||'%' installProcess, 
         updateTime 
     from(
          select 
                       cls.cls_school_id as clsSchoolId,
                       cls.school_name as schoolName,
                       ba.area_path as areaPath,
                       p.project_name as projectName,
                       p.project_id as projectId,
                       au.realname as managerName,
                       NVL(t.classCount,0)  as classCount,
                       NVL(cls.inspect_process,0)  as  inspectProcess,
                       NVL(t3.engineerCount,0) as engineerCount,
                       NVL(cls.EXPLORATION_PROCESS, 0)  as  explorationProcess,
                       NVL(cls.INSTALL_PROCESS, 0)      as   installProcess,
                       cls.update_time                  as  updateTime
                     
                  from cls_school cls
                  left join base_area ba
                    on ba.base_area_id = cls.base_area_id
                  left join project p
                    on p.project_id = cls.project_id
                  left join admin_user au
                    on au.admin_user_id = p.manager_id
               
                  left join (
                  
                     select   
                       clsc.cls_school_id,count(1) as classCount
                     from cls_classroom clsc
                     group by clsc.cls_school_id
                  
                  )t
                  on t.cls_school_id =cls.cls_school_id 
                  
                left join (
                
                   select  clssr.cls_school_id,
                           count(1) as engineerCount
                   
                   from  cls_school_r_user  clssr
                   group by clssr.cls_school_id
                    
                
                )t3 
               on t3.cls_school_id =cls.cls_school_id
                
                 
                 where 1 = 1
                and cls.delete_flag = 'N'
       
         <if test="clsSchoolAreaId !=null and clsSchoolAreaId !='' and clsSchoolAreaId != '-1'">
	      and cls.base_area_id in
	         (select b.base_area_id
	            from base_area b
	            start with b.base_area_id = #{clsSchoolAreaId,jdbcType=VARCHAR}
	            connect by prior b.base_area_id = b.parent_id)
        </if>
        <if test="projectAreaId !=null and projectAreaId !='' and projectAreaId != '-1'">
	     and p.base_area_id in
	         (select b.base_area_id
	           from base_area b
	           start with b.base_area_id = #{projectAreaId,jdbcType=VARCHAR}
	           connect by prior b.base_area_id = b.parent_id)
        </if>
        <if test="clsSchoolName !=null and clsSchoolName !=''">
   		   and cls.school_name like '%' || #{clsSchoolName} || '%' ESCAPE '/'
        </if>
        <if test="projectName !=null and projectName !=''">
   		   and p.project_name like '%' || #{projectName} || '%' ESCAPE '/'
   	    </if>
   	     order by
   	    
   	    <if test="sortDesc !=null and sortDesc!='' and sortDesc=='ASC' ">
           inspectProcess ASC,
   	    </if>
        <if test="sortDesc !=null and sortDesc!='' and  sortDesc=='DESC' ">
   	       inspectProcess DESC,
        </if>
        <if test="explorationDesc !=null and explorationDesc!='' and explorationDesc== 'ASC'">
   	       explorationProcess ASC,
   	    </if>
   	     <if test="explorationDesc !=null and explorationDesc!='' and explorationDesc== 'DESC'">
   	       explorationProcess DESC,
   	    </if>
   	    <if test="installDesc !=null and installDesc!='' and installDesc== 'ASC'">
   	       installProcess ASC,
   	    </if>
   	      <if test="installDesc !=null and installDesc!='' and installDesc== 'DESC'">
   	       installProcess DESC,
   	    </if>
   	    <if test="updateDesc !=null and updateDesc!='' and updateDesc== 'ASC'">
   	       updateTime ASC,
   	    </if>
   	      <if test="updateDesc !=null and updateDesc!='' and updateDesc== 'DESC'">
   	       updateTime DESC,
   	    </if>
   	    <if test="updateDesc ==null or updateDesc ==''">
           updateTime DESC,
        </if>
        cls.cls_school_id)
   	   
  </select>
  
  
  <!-- 根据学校id获取学校 -->
  <select id="getSchoolById" parameterType="String" resultType="com.codyy.oc.admin.entity.ClsSchool">
      select  
                    
                 cls.cls_school_id  as  clsSchoolId,
                 cls.school_name   as   schoolName,
                 ba.area_path      as   areaPath,
                 p.project_name    as   projectName,
                 cls.project_id    as   projectId,
                 cls.contact       as   contact,
                 cls.phone         as   phone
                 
      
         from cls_school cls
         
         left join base_area ba
            on ba.base_area_id = cls.base_area_id
            
         left join project p
            on p.project_id = cls.project_id
                 
         where 1=1 
         and   cls.cls_school_id=#{schoolId}

  </select>  
  
  <!-- 根据学校id获得与学校相关的工程师 -->
  <select id="getEngineerBySchoolId" parameterType="String" resultType="com.codyy.oc.admin.entity.AdminUser">
      
      select   
             au.admin_user_id   as  adminUserId,
             au.realname        as  realName
      from cls_school_r_user   clsr
      left join   admin_user  au    on  clsr.admin_user_id=au.admin_user_id
      where  clsr.cls_school_id=#{schoolId}
      
  </select>
  
  <!-- 判断学校中是否已分配工程师 -->
  <select id="checkSchoolRUser" parameterType="map" resultType="Integer">
    
     select count(1) from( 
        
       select clsr.admin_user_id
        
        from  cls_school_r_user   clsr
        
        left join  cls_school  cls      on  cls.cls_school_id=clsr.cls_school_id
        
        left join  admin_user au        on   au.admin_user_id=clsr.admin_user_id
        
        where cls.cls_school_id=#{shoolId}
        
        minus
          <foreach collection="users" index="index" item="item" open="(" separator="union all" close=")">   
               select 
                  #{item.adminUserId}
               from dual
         </foreach> 
         
      )
  </select>  
  
  <!-- 编辑学校 -->
  <update id="updateSchool" parameterType="com.codyy.oc.admin.entity.ClsSchool">
     update cls_school cls
     set 
       cls.project_id = #{projectId},
       cls.school_name = #{schoolName},
       cls.contact=#{contact},
       cls.phone=#{phone}
     where 
      cls.cls_school_id = #{clsSchoolId}
  
  </update>  
  
   <!-- 批量删除学校-工程师关系数量 -->
   <delete id="deleteSchoolRUser" parameterType="String">
      delete from cls_school_r_user
      where cls_school_id=#{clsSchoolId}
   </delete>
   
    <!-- 添加学校-工程师 -->
   <insert id="addProjectRelationUser" parameterType="list">
      insert into  cls_school_r_user (cls_school_r_user_id,cls_school_id,admin_user_id) 
      
      <foreach collection="list" item="items" open="(" close=")" separator="union all">
			select 
				#{items.schoolRUserId} ,
				#{items.clsSchoolId},
				#{items.adminUserId} 
			from dual
		</foreach>
   
   </insert>
  
  <!-- 根据学校id获取该学校的教室 -->
  <select id="getClassRoomBySchoolIdPageList" parameterType="com.codyy.commons.page.Page" resultType="com.codyy.oc.admin.entity.ClsClassroom">
     select clsClassroomId,roomName,roomType,clsSchoolName,schoolArea,inspectProcess|| '%' inspectProcess from(
     
     
       select
       
       clsr.cls_classroom_id     clsClassroomId,
       clsr.room_name            roomName,
       clsr.room_type            roomType,
       cls.school_name           clsSchoolName,
       bat.area_path             schoolArea,
       NVL(clsr.inspect_process,0)            inspectProcess
        
     from CLS_CLASSROOM clsr
  
     left join cls_school cls
      on cls.cls_school_id = clsr.cls_school_id
     left join base_area bat
      on bat.base_area_id = cls.base_area_id
      
     where  clsr.cls_school_id = #{map.clsSchoolId}
     
     order by 
     <if test="map.sortDesc !=null and map.sortDesc!='' and map.sortDesc=='ASC' ">
   	      inspectProcess ASC ,
   	 </if>
     <if test="map.sortDesc !=null and map.sortDesc!='' and  map.sortDesc=='DESC' ">
   	      inspectProcess DESC ,
     </if>
     clsr.update_time DESC,clsr.cls_classroom_id
   	 )
  </select>
  
  
  <!-- 通过学校id获取该学校工程师列表 -->
  <select id="getEngineerBySchoolIdPageList" parameterType="com.codyy.commons.page.Page" resultType="com.codyy.oc.admin.entity.AdminUser">
      
      select  
      
            au.admin_user_id   as  adminUserId,
            au.realname        as  realName,
            NVL(au.contact,'-')         as  contact
            
         from cls_school_r_user  clsr
         left join  admin_user au  on  clsr.admin_user_id=au.admin_user_id
         where clsr.cls_school_id=#{map.clsSchoolId}
  
  </select>
  
   <!-- 删除前检测学校是否已经分配工程师 -->
    <select id="checkSchoolEngineer" parameterType="String" resultType="Integer">
           select count(1)
           from  admin_user au
           left join  cls_school_r_user  clsr   on  clsr.admin_user_id=au.admin_user_id
           where clsr.cls_school_id=#{clsSchoolId}
    </select>
    
    
    <!-- 逻辑删除学校 -->
    <update id="deleteSchoolById"  parameterType="String">
        update cls_school  cls
        set 
             cls.delete_flag='Y'
        where  cls.cls_school_id=#{clsSchoolId}
    </update>
    
    <!-- 删除前检测学校下是否有教室 -->
    <select id="checkClassroom"  parameterType="String" resultType="Integer">
         select count(1)
         from  cls_classroom clsc
         where clsc.cls_school_id=#{clsSchoolId}
    </select>
    
   <update id="updateExplorationPress">
  	 begin 
                       
   update cls_school csu
   set (csu.exploration_process) =
       (
        select trunc(avg(nvl(cc.exploration_process, 0)), 2)
          from cls_school cs
          left join cls_classroom cc
            on cc.cls_school_id = cs.cls_school_id
         group by cs.cls_school_id
        having cs.cls_school_id = csu.cls_school_id ) where csu.cls_school_id = #{id,jdbcType=VARCHAR};
        
   update project csu
   set csu.exploration_process =
       (select trunc(avg(nvl(cc.exploration_process, 0)), 2)
          from project cs
          left join cls_school cc
            on cc.project_id = cs.project_id
         group by cs.project_id,cc.DELETE_FLAG
        having cs.project_id = csu.project_id and cc.DELETE_FLAG='N') 
        where csu.project_id = 
        (select  cs2.project_id from cls_school cs2 where cs2.cls_school_id=#{id,jdbcType=VARCHAR});
       end;
  </update>
  
  
  <update id="updateInstallPress">
  
  	 begin 
                       
   update cls_school csu
   set (csu.INSTALL_PROCESS) =
       (
        select trunc(avg(nvl(cc.INSTALL_PROCESS, 0)), 2)
          from cls_school cs
          left join cls_classroom cc
            on cc.cls_school_id = cs.cls_school_id
         group by cs.cls_school_id
        having cs.cls_school_id = csu.cls_school_id ) where csu.cls_school_id = #{id,jdbcType=VARCHAR};
        
   update project csu
   set csu.INSTALL_PROCESS =
       (select trunc(avg(nvl(cc.INSTALL_PROCESS, 0)), 2)
          from project cs
          left join cls_school cc
            on cc.project_id = cs.project_id
         group by cs.project_id,cc.DELETE_FLAG
        having cs.project_id = csu.project_id and cc.DELETE_FLAG='N') 
        where csu.project_id = 
        (select  cs2.project_id from cls_school cs2 where cs2.cls_school_id=#{id,jdbcType=VARCHAR});
       end;
  </update>
    
    <update id="updateInspectPress">
  	begin

   update cls_school csu
   set (csu.inspect_process) =
       (
        select trunc(avg(nvl(cc.inspect_process, 0)), 2)
          from cls_school cs
          left join cls_classroom cc
            on cc.cls_school_id = cs.cls_school_id
         group by cs.cls_school_id
        having cs.cls_school_id = csu.cls_school_id) where csu.cls_school_id = #{id,jdbcType=VARCHAR};
        
   update project csu
   set csu.inspect_process =
       (select trunc(avg(nvl(cc.inspect_process, 0)), 2)
          from project cs
          left join cls_school cc
            on cc.project_id = cs.project_id
         group by cs.project_id,cc.DELETE_FLAG
        having cs.project_id = csu.project_id and cc.DELETE_FLAG='N') 
        where csu.project_id = 
        (select  cs2.project_id from cls_school cs2 where cs2.cls_school_id=#{id,jdbcType=VARCHAR});
  	
  	end;
  </update>
</mapper>